name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: "Type 'yes' to confirm destruction"
        required: true
        default: "no"
        type: string
      environment:
        description: "Environment to destroy (dev, test, prod)"
        required: true
        default: "dev"
        type: string
      allocator_image_tag:
        description: "Docker image tag used in deployment (required for prod)"
        required: false
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  destroy:
    if: github.event.inputs.confirm_destroy == 'yes'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Validate and determine image tag
        id: resolve_image_tag
        run: |
          if [ "${{ github.event.inputs.environment }}" = "prod" ]; then
            if [ -z "${{ github.event.inputs.allocator_image_tag }}" ]; then
              echo "Error: allocator_image_tag must be provided for prod destruction"
              exit 1
            fi
            echo "tag=${{ github.event.inputs.allocator_image_tag }}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=linux-amd64-latest-test" >> "$GITHUB_OUTPUT"
          fi

      - name: Terraform Init Client VMs
        working-directory: lablink-allocator/lablink-allocator-service/terraform
        run: |
          terraform init -backend-config=backend-client-${{ github.event.inputs.environment }}.hcl

      - name: Extract Variable File
        working-directory: lablink-allocator/lablink-allocator-service/terraform
        run: |
          if [ "${{ github.event.inputs.environment }}" = "dev" ]; then
            cp variables-dev.tfvars variables.tfvars
          else
            aws s3 cp s3://tf-state-lablink-allocator-bucket/${{ github.event.inputs.environment }}/client/terraform.runtime.tfvars variables.tfvars
          fi
      - name: Terraform Destroy Client VMs
        working-directory: lablink-allocator/lablink-allocator-service/terraform
        run: |
          terraform destroy -auto-approve -var-file=variables.tfvars

      - name: Terraform Init
        working-directory: lablink-allocator
        run: |
          if [ "${{ github.event.inputs.environment }}" = "dev" ]; then
            terraform init
          else
            terraform init -backend-config=backend-${{ github.event.inputs.environment }}.hcl
          fi

      - name: Terraform Destroy
        working-directory: lablink-allocator
        run: |
          terraform destroy -auto-approve \
            -var="resource_suffix=${{ github.event.inputs.environment }}" \
            -var="allocator_image_tag=${{ steps.resolve_image_tag.outputs.tag }}" \
            -var-file="terraform.tfvars"
